{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Apriori\"\noutput: html_notebook\n---\n\n```{r}\n# load the data\n\ndf_groceries <- read.csv(\"data/groceries.csv\")\nhead(df_groceries)\n```\n\n```{r}\n# data cleaning and manipulations\n\n# make sure that the Member numbers are of numeric data type and then sort the dataframe based on the Member_number.\n\ndf_sorted <- df_groceries[order(df_groceries$Member_number),]\ndf_sorted$Member_number <- as.numeric(df_sorted$Member_number)\n```\n\n```{r}\n# convert the dataframe into transactions format such that all the items bought at the same time in one row. \n\nlibrary(plyr)\n\n# convert the dataframe into basket format, based on the Member_number and Date of transaction\n\ndf_itemList <- ddply(df_groceries,c(\"Member_number\",\"Date\"), \n                       function(df1) paste(df1$itemDescription, collapse = \",\"))\n\n```\n\n```{r}\n# delete date and member_number\n\ndf_itemList$Member_number <- NULL\ndf_itemList$Date <- NULL\n\n```\n\n```{r}\ncolnames(df_itemList) <- c(\"itemList\")\n\n# write.csv(df_itemList,\"ItemList.csv\", row.names = TRUE)\n\n# txn = read.transactions(file=\"ItemList.csv\", rm.duplicates= TRUE, format=\"basket\",sep=\",\",cols=1);\n\n# add the row numbers such that they can be used as transaction IDs\ndf_itemList$id <- 1:nrow(df_itemList)\n```\n\n```{r}\nlibrary(arules)\n\n# coerce the data frame to class transactions\n\ntxn = as(split(df_itemList[,\"itemList\"], df_itemList[,\"id\"]), \"transactions\")\n```\n\n\n```{r}\n# run the apriori algorithm\n\nbasket_rules <- apriori(txn, parameter = list(sup = 0, conf = 0, target=\"rules\"));\n\n# print association rules\n\narules::inspect(basket_rules[1:5])\n\n```\n\n\n",
    "created" : 1507040673290.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1245782985",
    "id" : "BD6B99CB",
    "lastKnownWriteTime" : 1507043273,
    "last_content_update" : 1507043273011,
    "path" : "~/Lemoxo/Machine Learning Notebooks/ML Notebooks - R Files/apriori.Rmd",
    "project_path" : "apriori.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled2"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}